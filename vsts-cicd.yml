# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(major).$(minor).$(Date:yyMM).$(Rev:r)

trigger:
- develop
- main
- master
- users/*

pool:
  vmImage: "windows-latest"

variables:
  "major": '2'
  "minor": '0'
  "BuildConfiguration": 'debug'
  "SolutionAbbreviation": 'gmm'
  disable.coverage.autogenerate: 'true'
  "buildRelease": ${{  and(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), in(variables['Build.Reason'], 'IndividualCI', 'Manual')) }}

stages:

- template: build-tag.yml
  parameters:
    tagName: $(Build.BuildNumber)

- template: build-services.yml
  parameters:
    repoToCheckout: ''
    checkoutPath: ''
    buildRelease: ${{variables.buildRelease}}

- template: yaml/build-functionapps.yml
  parameters:
    dependsOn: Build_Common
    condition: succeeded('Build_Common')
    repoToCheckout: ''
    checkoutPath: ''
    buildRelease: ${{variables.buildRelease}}
    functionApps:
    - function:
        name: 'NonProdService'
        coverageThreshold: 100
    - function:
       name: 'JobTrigger'
       coverageThreshold: 89
    - function:
       name: 'GraphUpdater'
       coverageThreshold: 75
    - function:
       name: 'SecurityGroup'
       coverageThreshold: 89
    - function:
       name: 'AzureMembershipProvider'
       coverageThreshold: 50
    - function:
        name: 'AzureMaintenance'
        coverageThreshold: 95
    - function:
        name: 'AzureUserReader'
        coverageThreshold: 45
    - function:
        name: 'JobScheduler'
        coverageThreshold: 48
    - function:
        name: 'MembershipAggregator'
        coverageThreshold: 85

- template: yaml/deploy-pipeline.yml
  parameters:
    solutionAbbreviation: '$(SolutionAbbreviation)'
    environmentAbbreviation: 'int'
    tenantId: $(tenantId)
    subscriptionId: $(subscriptionId_nonprod)
    subscriptionName: $(subscriptionName_nonprod)
    keyVaultReaders: $(keyVaultReaders_nonprod)
    location: $(location)
    serviceConnection: '$(SolutionAbbreviation)-serviceconnection-int'
    dependsOn: Build_Functions
    stageName: 'NonProd_int'
    functionApps:
    - function:
       name: 'NonProdService'
    - function:
       name: 'GraphUpdater'
    - function:
       name: 'MembershipAggregator'
       dependsOn:
       - 'GraphUpdater'
    - function:
       name: 'AzureUserReader'
    - function:
       name: 'SecurityGroup'
       dependsOn:
       - 'MembershipAggregator'
    - function:
       name: 'AzureMembershipProvider'
       dependsOn:
       - 'MembershipAggregator'
    - function:
       name: 'AzureMaintenance'
    - function:
       name: 'JobScheduler'
    - function:
       name: 'JobTrigger'
       dependsOn:
       - 'SecurityGroup'
    condition: |
      and(
        succeeded('Build_Functions'),
        eq(variables['Build.SourceBranch'], 'refs/heads/develop'),
        in(variables['Build.Reason'], 'IndividualCI', 'Manual')
      )

- template: yaml/deploy-pipeline.yml
  parameters:
    solutionAbbreviation: '$(SolutionAbbreviation)'
    environmentAbbreviation: 'ua'
    tenantId: $(tenantId)
    subscriptionId: $(subscriptionId_nonprod)
    subscriptionName: $(subscriptionName_nonprod)
    keyVaultReaders: $(keyVaultReaders_nonprod)
    location: $(location)
    serviceConnection: '$(SolutionAbbreviation)-serviceconnection-ua'
    dependsOn: Build_Functions
    stageName: 'NonProd_ua'
    functionApps:
    - function:
       name: 'NonProdService'
    - function:
       name: 'GraphUpdater'
    - function:
       name: 'MembershipAggregator'
       dependsOn:
       - 'GraphUpdater'
    - function:
       name: 'AzureUserReader'
    - function:
       name: 'SecurityGroup'
       dependsOn:
       - 'MembershipAggregator'
    - function:
       name: 'AzureMembershipProvider'
       dependsOn:
       - 'MembershipAggregator'
    - function:
       name: 'AzureMaintenance'
    - function:
       name: 'JobScheduler'
    - function:
       name: 'JobTrigger'
       dependsOn:
       - 'SecurityGroup'
    condition: |
      and(
          succeeded('Build_Functions'),
          in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'),
          in(variables['Build.Reason'], 'IndividualCI', 'Manual')
      )


- template: yaml/deploy-pipeline.yml
  parameters:
    solutionAbbreviation: '$(SolutionAbbreviation)'
    environmentAbbreviation: 'prodv2'
    tenantId: $(tenantId)
    subscriptionId: $(subscriptionId_prod)
    subscriptionName: $(subscriptionName_prod)
    keyVaultReaders: $(keyVaultReaders_prod)
    location: $(location)
    serviceConnection: '$(SolutionAbbreviation)-serviceconnection-prodv2'
    dependsOn: NonProd_ua
    stageName: 'Prod_production'
    functionApps:
    - function:
       name: 'GraphUpdater'
    - function:
       name: 'MembershipAggregator'
       dependsOn:
       - 'GraphUpdater'
    - function:
       name: 'AzureUserReader'
    - function:
       name: 'SecurityGroup'
       dependsOn:
       - 'MembershipAggregator'
    - function:
       name: 'AzureMembershipProvider'
       dependsOn:
       - 'MembershipAggregator'
    - function:
       name: 'AzureMaintenance'
    - function:
       name: 'JobScheduler'
    - function:
       name: 'JobTrigger'
       dependsOn:
       - 'SecurityGroup'
    condition: |
      and(
        succeeded('NonProd_ua'),
        succeeded('Build_Functions'),
        in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'),
        in(variables['Build.Reason'], 'IndividualCI', 'Manual')
      )
