parameters:
- name: repoToCheckout
  type: string
- name: checkoutPath
  type: string

stages:


- stage: BuildCommon
  jobs:
  - job: GMMBuildAndRelease
    strategy:
      maxParallel: 2
      matrix: 
        debug:
          BuildConfiguration: debug
        release:
          BuildConfiguration: release

    steps:

    - checkout: ${{ parameters.repoToCheckout }}
      path: ${{ parameters.checkoutPath }}

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        useGlobalJson: true
        workingDirectory: 'Service\GroupMembershipManagement'

    - task: DeleteFiles@1
      displayName: "Clean up development local settings files"
      inputs:
        SourceFolder: 'Service\GroupMembershipManagement'
        Contents: '**/local.settings.json'

    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: build
        workingDirectory: 'Service\GroupMembershipManagement'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        workingDirectory: 'Service\GroupMembershipManagement'
        # see https://github.com/coverlet-coverage/coverlet/blob/master/Documentation/Examples/MSBuild/MergeWith/HowTo.md for how to merge all the test output into one report
        arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:MergeWith="$(Build.SourcesDirectory)/Coverage/coverage.json" /p:CoverletOutputFormat="cobertura%2cjson" /p:CoverletOutput="$(Build.SourcesDirectory)/Coverage/" -m:1'
      condition: and(succeeded(), eq(variables['BuildConfiguration'], 'debug'))

    - task: PublishCodeCoverageResults@1
      displayName: 'collect code coverage'
      inputs:
        codeCoverageTool: 'cobertura'
        summaryFileLocation: $(Build.SourcesDirectory)\Coverage\coverage.cobertura.xml
        failIfCoverageEmpty: false
      condition: and(succeeded(), eq(variables['BuildConfiguration'], 'debug'))

    - task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@6
      displayName: 'check build quality'
      inputs:
        checkCoverage: true
        coverageFailOption: fixed
        coverageType: lines
        coverageThreshold: 19
      condition: and(succeeded(), eq(variables['BuildConfiguration'], 'debug'))

    - task: CopyFiles@2
      displayName: 'copy arm templates'
      inputs:
        SourceFolder: Infrastructure
        TargetFolder: '$(build.artifactstagingdirectory)/Infrastructure'

    - task: CopyFiles@2
      displayName: 'copy release management scripts'
      inputs:
        SourceFolder: Scripts
        TargetFolder: '$(build.artifactstagingdirectory)/Scripts'

    - task: CopyFiles@2
      displayName: 'copy service'
      inputs:
        SourceFolder: 'Service\GroupMembershipManagement'
        contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'publish artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'        
        ArtifactName: '$(Build.BuildNumber)_$(BuildConfiguration)'