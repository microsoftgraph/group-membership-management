{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerBaseUrl": {
      "type": "string"
    },
    "containerSasToken": {
      "type": "string"
    },
    "solutionAbbreviation": {
      "type": "string",
      "defaultValue": "gmm",
      "minLength": 2,
      "maxLength": 3,
      "metadata": {
        "description": "Enter an abbreviation for the solution."
      }
    },
    "resourceGroupClassification": {
      "type": "string",
      "defaultValue": "data",
      "allowedValues": [ "prereqs", "data", "compute" ],
      "metadata": {
        "description": "Classify the types of resources in this resource group."
      }
    },
    "environmentAbbreviation": {
      "type": "string",
      "minLength": 2,
      "maxLength": 6,
      "metadata": {
        "description": "Enter an abbreviation for the environment."
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "Tenant id."
      }
    },
    "keyVaultName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('solutionAbbreviation'), '-', parameters('resourceGroupClassification'), '-', parameters('environmentAbbreviation'))]",
      "metadata": {
        "description": "Key vault name."
      }
    },
    "keyVaultSkuName": {
      "type": "string",
      "allowedValues": [ "Premium", "Standard" ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "Key vault sku name."
      }
    },
    "keyVaultSkuFamily": {
      "type": "string",
      "defaultValue": "A",
      "metadata": {
        "description": "Key vault sku family."
      }
    },
    "keyVaultLocation": {
      "type": "string",
      "defaultValue": "West US 2",
      "allowedValues": [
        "South Central US",
        "West Europe",
        "East US",
        "North Europe",
        "West US 2"
      ],
      "metadata": {
        "description": "Key vault location."
      }
    },
    "keyVaultReaders": {
      "type": "array",
      "metadata": {
        "decription": "User(s) and/or Group(s) AAD Object Ids to which access to the keyvault will be granted to."
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('solutionAbbreviation'), '-', parameters('resourceGroupClassification'), '-', parameters('environmentAbbreviation'))]",
      "metadata": {
        "description": "Enter application insights name."
      }
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "West US 2",
      "allowedValues": [
        "South Central US",
        "West Europe",
        "East US",
        "North Europe",
        "West US 2"
      ],
      "metadata": {
        "description": "Location for the application insights account."
      }
    },
    "appInsightsKind": {
      "type": "string",
      "defaultValue": "web",
      "allowedValues": [ "web", "java", "HockeyAppBridge", "other" ],
      "metadata": {
        "description": "Enter the application insights type."
      }
    },
    "serviceBusName": {
      "type": "string",
      "defaultValue": "[concat(parameters('solutionAbbreviation'), '-', parameters('resourceGroupClassification'), '-', parameters('environmentAbbreviation'))]",
      "metadata": {
        "description": "Enter service bus name."
      }
    },
    "serviceBusSku": {
      "type": "string",
      "allowedValues": [ "Standard", "Premium" ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "Enter service bus sku."
      }
    },
    "serviceBusLocation": {
      "type": "string",
      "defaultValue": "West US 2",
      "allowedValues": [
        "South Central US",
        "West Europe",
        "East US",
        "North Europe",
        "West US 2"
      ],
      "metadata": {
        "description": "Location for the service bus."
      }
    },
    "serviceBusTopicName": {
      "type": "string",
      "defaultValue": "syncJobs",
      "metadata": {
        "description": "Enter service bus topic name."
      }
    },
    "serviceBusTopicSubscriptions": {
      "type": "array",
      "defaultValue": [
        {
          "name": "Organization",
          "ruleName": "syncType",
          "ruleSqlExpression": "Type = 'Organization'"
        },
        {
          "name": "SecurityGroup",
          "ruleName": "syncType",
          "ruleSqlExpression": "Type = 'SecurityGroup'"
        }
      ],
      "metadata": {
        "description": "Enter service bus topic's subscriptions."
      }
    },
    "serviceBusQueueName": {
      "type": "string",
      "defaultValue": "membership",
      "metadata": {
        "description": "Enter service bus queue name."
      }
    },
    "storageAccountName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 24,
      "defaultValue": "[concat(parameters('solutionAbbreviation'), parameters('environmentAbbreviation'), uniqueString(resourcegroup().id))]",
      "metadata": {
        "description": "Enter storage account name."
      }
    },
    "storageAccountSku": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Enter storage account sku. Setting applied to storageAccount and jobsStorageAccount"
      }
    },
    "jobsStorageAccountName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat('jobs', parameters('environmentAbbreviation'), uniqueString(resourcegroup().id))]",
      "metadata": {
        "description": "Enter storage account name."
      }
    },
    "jobsTableName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Enter jobs table name."
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('solutionAbbreviation'), '-', parameters('resourceGroupClassification'), '-', parameters('environmentAbbreviation'))]"
    },
    "logAnalyticsSku": {
      "type": "string",
      "allowedValues": [
        "pergb2018",
        "Free",
        "Standalone",
        "PerNode",
        "Standard",
        "Premium"
      ],
      "defaultValue": "pergb2018"
    },
    "logAnalyticsLocation": {
      "type": "string",
      "defaultValue": "West US 2",
      "allowedValues": [
        "South Central US",
        "West Europe",
        "East US",
        "North Europe",
        "West US 2"
      ],
      "metadata": {
        "description": "Enter the application location."
      }
    }
  },
  "variables": {
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "dataKeyVaultTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'keyVault.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[parameters('keyVaultName')]"
          },
          "skuName": {
            "value": "[parameters('keyVaultSkuName')]"
          },
          "skuFamily": {
            "value": "[parameters('keyVaultSkuFamily')]"
          },
          "location": {
            "value": "[parameters('keyVaultLocation')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "keyVaultPoliciesTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'keyVaultAccessPolicy.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[parameters('keyVaultName')]"
          },
          "policies": {
            "value": "[parameters('keyVaultReaders')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          }
        }
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/dataKeyVaultTemplate"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "appInsightsTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'applicationInsights.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[parameters('appInsightsName')]"
          },
          "location": {
            "value": "[parameters('appInsightsLocation')]"
          },
          "kind": {
            "value": "[parameters('appInsightsKind')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "serviceBusTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'serviceBus.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[parameters('serviceBusName')]"
          },
          "sku": {
            "value": "[parameters('serviceBusSku')]"
          },
          "location": {
            "value": "[parameters('serviceBusLocation')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "serviceBusTopicTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'serviceBusTopic.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serviceBusName": {
            "value": "[parameters('serviceBusName')]"
          },
          "topicName": {
            "value": "[parameters('serviceBusTopicName')]"
          }
        }
      },
      "dependsOn": [ "Microsoft.Resources/deployments/serviceBusTemplate" ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "serviceBusSubscriptionsTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'serviceBusSubscription.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serviceBusName": {
            "value": "[parameters('serviceBusName')]"
          },
          "topicName": {
            "value": "[parameters('serviceBusTopicName')]"
          },
          "topicSubscriptions": {
            "value": "[parameters('serviceBusTopicSubscriptions')]"
          }
        }
      },
      "dependsOn": [ "Microsoft.Resources/deployments/serviceBusTopicTemplate" ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "serviceBusQueueTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'serviceBusQueue.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serviceBusName": {
            "value": "[parameters('serviceBusName')]"
          },
          "queueName": {
            "value": "[parameters('serviceBusQueueName')]"
          },
          "requiresSession": {
            "value": true
          }
        }
      },
      "dependsOn": [ "Microsoft.Resources/deployments/serviceBusTemplate" ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "storageAccountTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'storageAccount.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[parameters('storageAccountName')]"
          },
          "sku": {
            "value": "[parameters('storageAccountSku')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "jobsStorageAccountTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'storageAccount.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[parameters('jobsStorageAccountName')]"
          },
          "sku": {
            "value": "[parameters('storageAccountSku')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "logAnalyticsTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'logAnalytics.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[parameters('logAnalyticsName')]"
          },
          "sku": {
            "value": "[parameters('logAnalyticsSku')]"
          },
          "location": {
            "value": "[parameters('logAnalyticsLocation')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "secretsTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('containerBaseUrl'), 'keyVaultSecrets.json'), parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultParameters": {
            "value": [
              {
                "name": "storageAccountName",
                "value": "[parameters('storageAccountName')]"
              },
              {
                "name": "storageAccountConnectionString",
                "value": "[reference('storageAccountTemplate').outputs.connectionString.value]"
              },
              {
                "name": "jobsStorageAccountName",
                "value": "[parameters('jobsStorageAccountName')]"
              },
              {
                "name": "jobsStorageAccountConnectionString",
                "value": "[reference('jobsStorageAccountTemplate').outputs.connectionString.value]"
              },
              {
                "name": "jobsTableName",
                "value": "[parameters('jobsTableName')]"
              },
              {
                "name": "appInsightsAppId",
                "value": "[reference('appInsightsTemplate').outputs.appId.value]"
              },
              {
                "name": "appInsightsInstrumentationKey",
                "value": "[reference('appInsightsTemplate').outputs.instrumentationKey.value]"
              },
              {
                "name": "serviceBusNamespace",
                "value": "[parameters('serviceBusName')]"
              },
              {
                "name": "serviceBusPrimaryKey",
                "value": "[reference('serviceBusTemplate').outputs.rootManageSharedAccessKeyPrimaryKey.value]"
              },
              {
                "name": "serviceBusConnectionString",
                "value": "[reference('serviceBusTemplate').outputs.rootManageSharedAccessKeyConnectionString.value]"
              },
              {
                "name": "serviceBusSyncJobTopic",
                "value": "[parameters('serviceBusTopicName')]"
              },
              {
                "name": "serviceBusMembershipQueue",
                "value": "[parameters('serviceBusQueueName')]"
              },
              {
                "name": "logAnalyticsCustomerId",
                "value": "[reference('logAnalyticsTemplate').outputs.customerId.value]"
              },
              {
                "name": "logAnalyticsPrimarySharedKey",
                "value": "[reference('logAnalyticsTemplate').outputs.primarySharedKey.value]"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/dataKeyVaultTemplate",
        "Microsoft.Resources/deployments/storageAccountTemplate",
        "Microsoft.Resources/deployments/jobsStorageAccountTemplate",
        "Microsoft.Resources/deployments/appInsightsTemplate",
        "Microsoft.Resources/deployments/serviceBusTemplate",
        "Microsoft.Resources/deployments/logAnalyticsTemplate"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "serviceBusName": {
      "type": "string",
      "value": "[parameters('serviceBusName')]"
    },
    "serviceBusTopicName": {
      "type": "string",
      "value": "[parameters('serviceBusTopicName')]"
    }
  }
}